-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.owner
(
    id serial NOT NULL,
    firstname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    surname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    telephonenumber integer NOT NULL,
    CONSTRAINT owner_pkey PRIMARY KEY (id),
    CONSTRAINT owner_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.owner_password
(
    hashed_password bytea NOT NULL,
    salt bytea NOT NULL,
    id serial NOT NULL,
    CONSTRAINT owner_password_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reservation
(
    id serial NOT NULL,
    room_id integer,
    user_id integer,
    begin_date date NOT NULL,
    end_date date NOT NULL,
    CONSTRAINT reservation_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.room
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    bed_number integer NOT NULL,
    description character varying(200) COLLATE pg_catalog."default" NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT room_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    first_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    surname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    telephone_number integer NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.users_password
(
    id serial NOT NULL,
    hashed_password bytea NOT NULL,
    salt bytea NOT NULL,
    CONSTRAINT users_password_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.owner_password
    ADD CONSTRAINT owner_password_fk FOREIGN KEY (id)
    REFERENCES public.owner (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS owner_password_pk
    ON public.owner_password(id);


ALTER TABLE IF EXISTS public.reservation
    ADD CONSTRAINT reservation_room_fkey FOREIGN KEY (room_id)
    REFERENCES public.room (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.reservation
    ADD CONSTRAINT reservation_user_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.users_password
    ADD CONSTRAINT users_password_fk FOREIGN KEY (id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS users_password_pkey
    ON public.users_password(id);

END;